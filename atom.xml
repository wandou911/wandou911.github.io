<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>晨星科技</title>
  
  <subtitle>专注人工智能</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.iruach.com/"/>
  <updated>2018-11-23T07:55:16.980Z</updated>
  <id>http://blog.iruach.com/</id>
  
  <author>
    <name>wandou</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>常用软件</title>
    <link href="http://blog.iruach.com/2018/11/23/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6/"/>
    <id>http://blog.iruach.com/2018/11/23/常用软件/</id>
    <published>2018-11-23T15:37:59.000Z</published>
    <updated>2018-11-23T07:55:16.980Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://www.cydiaimpactor.com" target="_blank" rel="noopener">Cydia Impactor</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;http://www.cydiaimpactor.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Cydia Impactor&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="软件" scheme="http://blog.iruach.com/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="software" scheme="http://blog.iruach.com/tags/software/"/>
    
  </entry>
  
  <entry>
    <title>github pages+hexo 搭建博客</title>
    <link href="http://blog.iruach.com/2018/11/23/github-pages-hexo-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://blog.iruach.com/2018/11/23/github-pages-hexo-搭建博客/</id>
    <published>2018-11-23T14:36:10.000Z</published>
    <updated>2018-11-23T07:14:28.417Z</updated>
    
    <content type="html"><![CDATA[<p>博客搭建好之后，貌似很久没有写文章了，现在就来分享一下我搭建博客的艰苦行程和一些莫名其妙的坑。</p><p>ps:本博客是在MAC环境下进行搭建的，并且对github pages和一些shell脚本知识有所了解。</p><p>首先简单描述一下搭建的大体流程吧（其实挺简单的，只是体力活费时而已）：</p><ol><li>拥有一个github pages</li><li>在本地电脑里配置hexo的环境。（ hexo与github pages绑定，写博文修改博文等，生成静态博客并push to github。)</li><li>绑定自己的域名（也可以不用绑定，github pages有二级域名，只不过绑定了一个属于自己的域名更有逼格点儿。）</li></ol><h2 id="Github-Pages-（第一步）"><a href="#Github-Pages-（第一步）" class="headerlink" title="Github Pages （第一步）"></a>Github Pages （第一步）</h2><p>Github Pages免费的静态站点，其特点：免费托管、自带主题、支持自制页面等。</p><p>创建Github Pages比较简单，只要你有一个github账号在创建一个仓库就行了，但是这个仓库是有规则的，其格式必须为：    <code>yourusername.github.io</code>。然后根据提示一直下一步即可，非常简单。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://ws4.sinaimg.cn/large/006tNbRwly1fxhrhpi00vj313l0u0gr9.jpg" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure><blockquote><p>作为一个开发者，要是连一个github账号都没有，那你可以洗洗睡了。</p></blockquote><blockquote><p>而仓库命名格式中的<code>yourusername</code>是你的github用户名。笔者的github用户名是<code>wandou911</code>。所以仓库命名格式则是<code>wandou911.github.io</code></p></blockquote><h2 id="Hexo-（第二步）"><a href="#Hexo-（第二步）" class="headerlink" title="Hexo （第二步）"></a>Hexo （第二步）</h2><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>Hexo的安装网上有很多教程，但很多都很蛋疼且过期技术，所以最好的还是参考Hexo官方的安装教程来一步一步走。在此笔者也不写详细教程了，因为可能不出2个月就坑了小伙伴们。<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">中文版Hexo文档点此进行传送。。。</a></p><blockquote><p>本地环境说白了就是要有Git和Node.js环境即可。详情参见官网文档为准，也最好参考官网，避免入坑。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><h3 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h3><p>Hexo安装好了之后，就开始进行建站。打开终端cd到桌面并使用如下命令即可建好</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init yourname</span><br><span class="line">cd yourname</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>其中yourname是你的文件夹名字可随意取（本文章假设yourname的文件夹名称是Hexo）。<br>建站好了之后需要了解更多的信息和其他步骤请参考官网的这篇文档。<a href="https://hexo.io/zh-cn/docs/setup.html" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/setup.html</a></p><p>这里需要特别提一下，官方的文档里并没讲解如何配置与Github pages进行关联，在此特意说一下配置信息。进入到你的站点（使用hexo init yourname命令时，这里的yourname文件夹目录，刚假设yourname是Hexo，所以我们进入Hexo目录），然后以文本编辑器打开<code>_config.yml</code>文件，并滚动到最下面添加如下配置信息（注意最下边有<code>deploy</code>和<code>type</code>字段，覆盖这两个字段或者删除这两个字段然后复制下面的四个字段也行。）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">type: git</span><br><span class="line">repo: https://github.com/biggercoffee/biggercoffee.github.io.git</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure><blockquote><p>注意：type后面：号和git之间的空格</p></blockquote><p>把其中repo字段的值替换成你的github pages提交代码的git地址。</p><blockquote><p>别告诉我你不知道你的github pages的git提交地址。。。<br>好吧，我还是附上一张截图吧，进入到你的github刚创建好的那个github pages仓库就能看到了。</p></blockquote><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://ws2.sinaimg.cn/large/006tNbRwly1fxhs69aoabj31jm0owwm2.jpg" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure><p>好吧，到此你使用终端，然后进入到你的站点文件夹Hexo</p><p>输入命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>如果成功会打印类似<code>Hexo is running at http://localhost:4000/. Press Ctrl+C to stop</code>的一句话，再打开你的浏览器输入<code>localhost:4000</code>地址见证神奇的一刻吧。</p><h3 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h3><p>当然这只是本地跑起来了，而你的github pages服务器上并没有，所以你就需要在你的站点里使用终端命令进行发布：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>命令详解，第一条是清楚缓存，第二条命令是生成本地发布文件夹，第三条命令才是最后的发布到<code>github pages</code>上。更多的hexo命令操作请参考官方文档即可。不过一般用来用去无非就是创建页面、发布这么几条命令而已。<a href="https://hexo.io/zh-cn/docs/commands.html" target="_blank" rel="noopener">Hexo官方命令参考文档</a></p><p>其实学习一个新东西有事没事多去官方看文档，比在网上查资料要来的更靠谱的多。</p><h3 id="HEXO主题"><a href="#HEXO主题" class="headerlink" title="HEXO主题"></a>HEXO主题</h3><p>如果你到了这里没有任何问题，那么恭喜你已经成功了，不过这才刚刚开始。<br>当你成功的看到自己博客搭建好的那一刻又是激动又是失望，激动的是博客总算折腾出来了，失望的是，为何如此的丑。。。说实话Hexo默认的主题自我感觉还过得去，如果你想换风格,Hexo的主题网上随便一搜也有很多。在此笔者使用的博客主题是indigo（国人写的）。<a href="https://github.com/yscoder/hexo-theme-indigo" target="_blank" rel="noopener">https://github.com/yscoder/hexo-theme-indigo</a></p><p>indigo文档已经写得很详细了（上述链接里有文档地址），笔者在此不再详述。</p><h4 id="主题安装："><a href="#主题安装：" class="headerlink" title="主题安装："></a>主题安装：</h4><p>安装需确认你的 Hexo 版本在 3.0 以上，以及 Node 版本为 6.x 以上，在 Hexo 根目录，执行以下命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:yscoder/hexo-theme-indigo.git themes/indigo</span><br></pre></td></tr></table></figure><p>打开Hexo目录 进入themes目录，就可以看到刚刚下载的主题</p><p>Hexo目录<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://ws2.sinaimg.cn/large/006tNbRwly1fxhtrrucpyj30ze0e0gnj.jpg" alt="Hexo目录" title="">                </div>                <div class="image-caption">Hexo目录</div>            </figure></p><p>themes目录</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://ws2.sinaimg.cn/large/006tNbRwly1fxhtps7kmuj30zc0d8dgk.jpg" alt="themes目录" title="">                </div>                <div class="image-caption">themes目录</div>            </figure><h4 id="主题配置："><a href="#主题配置：" class="headerlink" title="主题配置："></a>主题配置：</h4><p>找到Hexo目录下的_config.yml因为之后还会用到，所以我们在此约定一下，将这个配置文件叫做站点配置文件，找到theme选项，把主题切换为indigo .如下图,将原来的landscape删掉，改为indigo</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://ws3.sinaimg.cn/large/006tNbRwly1fxhtw9ao4oj30xk0aaq4d.jpg" alt="indigo主题配置" title="">                </div>                <div class="image-caption">indigo主题配置</div>            </figure><h2 id="域名绑定（第三步，可选）"><a href="#域名绑定（第三步，可选）" class="headerlink" title="域名绑定（第三步，可选）"></a>域名绑定（第三步，可选）</h2><p>笔者是在万网买的域名（<a href="http://iruach.com/" target="_blank" rel="noopener">http://iruach.com/</a>）。 域名买好之后提交实名认证等，这些操作就不在赘述。域名购买地址<a href="https://wanwang.aliyun.com/" target="_blank" rel="noopener">https://wanwang.aliyun.com/</a>。</p><p>这里需要特别提一下的就是万网如何与github pages进行绑定，首先假设你有一个域名并且是可用状态。修改你域名的DNS地址为 f1g1ns1.dnspod.net和f1g1ns2.dnspod.net</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/660127-fc06d96052ee0cb4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure><p>然后在你的本地站点目录里的source目录下添加一个CNAME文件，不带后缀，效果如下</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/660127-4f4ac0bceaf94756.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure><p>以文本编辑器打开CNAME，里面添加你的域名信息（不加http://） 如下图</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://ws2.sinaimg.cn/large/006tNbRwly1fxhu5ng11xj30zk0443yn.jpg" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure><p>填写完了之后再重新部署到github pages上（部署简写命令hexo d -g)<br>下一步注册DNSpod，然后添加域名，添加记录即可。</p><p>添加域名填写你的域名即可，老规矩不用添加http://，然后在点击你的域名点进去在添加CNAME记录即可（其中记录中CNAME的值是你的github pages的地址）。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://ws2.sinaimg.cn/large/006tNbRwly1fxhuic2r9qj317g0m8n2o.jpg" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure><p>那么现在把你本地的Hexo生成一下在提交到Github pages上吧</p><p>生成和提交简写命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d -g</span><br></pre></td></tr></table></figure><p>然后打开你的浏览器输入你购买的域名尝试吧。<br>笔者的博客域名：<a href="http://blog.iruach.com/">http://blog.iruach.com/</a></p><p>ps1:万网DNS地址更换貌似需要一段时间才能生效，如果不能访问请晚点或者隔天再访问域名，如果还是不行可能就是出问题了。反正笔者当时运气好，修改了万网DNS之后即时生效。</p><p>ps2:由于笔者用的是二级域名，如果是一级域名，上面CNAME文件和DNSPOD解析如下图即可：</p><p>CNAME文件写入<code>iruach.com</code><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://ws4.sinaimg.cn/large/006tNbRwly1fxhuaucmwoj30zm0dmjrt.jpg" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure></p><p>DNSPOD解析主机记录写入<code>www</code></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://ws3.sinaimg.cn/large/006tNbRwly1fxhubrqe7vj317u0m4gr1.jpg" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure><h2 id="笔者分享"><a href="#笔者分享" class="headerlink" title="笔者分享"></a>笔者分享</h2><p>分享一些笔者用Hexo写文章的tips</p><h3 id="文章管理"><a href="#文章管理" class="headerlink" title="文章管理"></a>文章管理</h3><p>一般笔者写文章、修改文章是在本地可视化写文章，然后在使用命令提交上去。笔者使用的是一个hexo可视化文章管理的插件（hey），地址：<a href="https://github.com/nihgwu/hexo-hey" target="_blank" rel="noopener">https://github.com/nihgwu/hexo-hey</a> 。</p><p>当然也有一个Hexo的admin插件，但是那个插件不支持图片拖拽进来，所以笔者推荐使用hey。安装和使用详情，参见笔者给出的github地址。</p><h3 id="shell脚本自动化（可忽略，只是一个想法）"><a href="#shell脚本自动化（可忽略，只是一个想法）" class="headerlink" title="shell脚本自动化（可忽略，只是一个想法）"></a>shell脚本自动化（可忽略，只是一个想法）</h3><p>开启Hexo的本地服务或者提交到github pages这些都是一些终端里的Hexo命令，所以笔者写了一些shell脚本，来简化这些操作。所以基本就是用hey可视化写文章，写好了之后，然后点击一键部署的shell脚本，然后就自动发布了（当然这也纯属鸡助，看个人。）。由于shell脚本比较简单，随意网上搜索资料一大堆。再加上笔者自己写的脚本代码也没上传，在此插入一个一键部署的shell脚本代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd Desktop/Hexo</span><br><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>cd到自己的站点目录，然后直接使用hexo命令即可。shell脚本自动化操作就是封装了这些命令而已，在此也只是提供这么一个想法，既然我们都是coder，何不善用自己已有的知识尼。<br>写到最后</p><p>github pages虽然免费，但毕竟是国外的服务器，国内访问可以稍微缓慢，如果是土豪，可去买一个支持Node.js的国内云空间即可。总之github pages + hexo搭建博客还是挺能折腾人的。但毕竟免费，而且身为技术人员不就是该具备折腾的精神吗？（博客地址点此）</p><h3 id="Hexo常见问题"><a href="#Hexo常见问题" class="headerlink" title="Hexo常见问题"></a>Hexo常见问题</h3><blockquote><p>在执行 hexo deploy或者 hexo d 后,出现 error deployer not found:git 的错误处理</p></blockquote><p>输入代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>部署：</p><pre><code>hexo d</code></pre><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接:"></a>参考链接:</h3><p>1 <a href="https://www.jianshu.com/p/834d7cc0668d" target="_blank" rel="noopener">我的博客是如何搭建的（github pages + HEXO + 域名绑定）</a></p><p>2 <a href="https://hexo.io" target="_blank" rel="noopener">hexo官方文档</a></p><p>3 <a href="https://www.zhihu.com/question/24422335" target="_blank" rel="noopener">有哪些好看的 Hexo 主题</a></p><p>4 <a href="https://www.jianshu.com/p/4d2c07a330da" target="_blank" rel="noopener">Hexo常见问题</a></p><p>5 <a href="https://github.com/qiubaiying/qiubaiying.github.io/wiki/博客搭建详细教程#Rename" target="_blank" rel="noopener">博客搭建详细教程</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;博客搭建好之后，貌似很久没有写文章了，现在就来分享一下我搭建博客的艰苦行程和一些莫名其妙的坑。&lt;/p&gt;
&lt;p&gt;ps:本博客是在MAC环境下进行搭建的，并且对github pages和一些shell脚本知识有所了解。&lt;/p&gt;
&lt;p&gt;首先简单描述一下搭建的大体流程吧（其实挺简单
      
    
    </summary>
    
      <category term="博客" scheme="http://blog.iruach.com/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="web" scheme="http://blog.iruach.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>Hexo快速上手</title>
    <link href="http://blog.iruach.com/2018/11/23/hexo-%E5%BC%80%E5%A7%8B/"/>
    <id>http://blog.iruach.com/2018/11/23/hexo-开始/</id>
    <published>2018-11-23T06:34:23.180Z</published>
    <updated>2018-11-23T06:34:23.180Z</updated>
    
    <content type="html"><![CDATA[<h2 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h2><h3 id="init"><a href="#init" class="headerlink" title="init"></a>init</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init [folder]</span><br></pre></td></tr></table></figure><p>新建一个网站。如果没有设置 folder ，Hexo 默认在目前的文件夹建立网站。</p><h3 id="new"><a href="#new" class="headerlink" title="new"></a>new</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><p>新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。</p><h3 id="generate"><a href="#generate" class="headerlink" title="generate"></a>generate</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>生成静态文件。</p><p>选项    描述<br>-d, –deploy    文件生成后立即部署网站<br>-w, –watch    监视文件变动<br>该命令可以简写为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure></p><h3 id="publish"><a href="#publish" class="headerlink" title="publish"></a>publish</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo publish [layout] &lt;filename&gt;</span><br></pre></td></tr></table></figure><p>发表草稿。</p><h3 id="server"><a href="#server" class="headerlink" title="server"></a>server</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>启动服务器。默认情况下，访问网址为： <a href="http://localhost:4000/。" target="_blank" rel="noopener">http://localhost:4000/。</a></p><p>选项    描述<br>-p, –port    重设端口<br>-s, –static    只使用静态文件<br>-l, –log    启动日记记录，使用覆盖记录格式</p><h3 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>部署网站。</p><p>参数    描述<br>-g, –generate    部署之前预先生成静态文件<br>该命令可以简写为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure></p><h3 id="render"><a href="#render" class="headerlink" title="render"></a>render</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo render &lt;file1&gt; [file2] ...</span><br></pre></td></tr></table></figure><p>渲染文件。</p><p>参数    描述<br>-o, –output    设置输出路径</p><h3 id="migrate"><a href="#migrate" class="headerlink" title="migrate"></a>migrate</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo migrate &lt;type&gt;</span><br></pre></td></tr></table></figure><p>从其他博客系统 迁移内容。</p><h3 id="clean"><a href="#clean" class="headerlink" title="clean"></a>clean</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure><p>清除缓存文件 (db.json) 和已生成的静态文件 (public)。</p><p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p><h3 id="list"><a href="#list" class="headerlink" title="list"></a>list</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo list &lt;type&gt;</span><br></pre></td></tr></table></figure><p>列出网站资料。</p><h3 id="version"><a href="#version" class="headerlink" title="version"></a>version</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo version</span><br></pre></td></tr></table></figure><p>显示 Hexo 版本。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;指令&quot;&gt;&lt;a href=&quot;#指令&quot; class=&quot;headerlink&quot; title=&quot;指令&quot;&gt;&lt;/a&gt;指令&lt;/h2&gt;&lt;h3 id=&quot;init&quot;&gt;&lt;a href=&quot;#init&quot; class=&quot;headerlink&quot; title=&quot;init&quot;&gt;&lt;/a&gt;init&lt;/h
      
    
    </summary>
    
      <category term="云服务器" scheme="http://blog.iruach.com/categories/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="科技" scheme="http://blog.iruach.com/tags/%E7%A7%91%E6%8A%80/"/>
    
      <category term="网页" scheme="http://blog.iruach.com/tags/%E7%BD%91%E9%A1%B5/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://blog.iruach.com/2018/11/23/hello-world/"/>
    <id>http://blog.iruach.com/2018/11/23/hello-world/</id>
    <published>2018-11-23T06:34:23.178Z</published>
    <updated>2018-11-23T06:34:23.179Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Test</title>
    <link href="http://blog.iruach.com/2018/11/23/Test/"/>
    <id>http://blog.iruach.com/2018/11/23/Test/</id>
    <published>2018-11-22T19:13:35.000Z</published>
    <updated>2018-11-23T06:34:23.181Z</updated>
    
    <content type="html"><![CDATA[<p>（1）将站点配置文件中的 post_asset_folder 选项设置成 true</p><p>（2）在站点文件夹中打开 git bash，输入命令 npm install hexo-asset-image –save 安装插件</p><p>（3）此时使用 hexo new title 创建文章时，将同时在source/_post文件夹中生成一个与title同名的文件夹，我们只需将待添加的图片放进此文件夹中，然后在文章中通过Markdown语法进行引用即可，例如，在资源文件夹（就是那个与title同名的文件夹）中添加了图片example.PNG，则可以在对应的文章中使用语句 <figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="title/example.PNG" alt="示例图片" title="示例图片">                </div>                <div class="image-caption">示例图片</div>            </figure> 添加图片</p><p>好了，常用的markdown语法至此我们已经基本学习完毕了， 然后我们就可以根据这些语法去书写我们的博客内容啦，下面再提供几个比较高级的玩法：</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;（1）将站点配置文件中的 post_asset_folder 选项设置成 true&lt;/p&gt;
&lt;p&gt;（2）在站点文件夹中打开 git bash，输入命令 npm install hexo-asset-image –save 安装插件&lt;/p&gt;
&lt;p&gt;（3）此时使用 hexo n
      
    
    </summary>
    
    
      <category term="科技" scheme="http://blog.iruach.com/tags/%E7%A7%91%E6%8A%80/"/>
    
      <category term="网页" scheme="http://blog.iruach.com/tags/%E7%BD%91%E9%A1%B5/"/>
    
  </entry>
  
</feed>
